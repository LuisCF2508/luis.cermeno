//Objective:  template for C++ programs and to test code
//Name: Luis Cermeno-Farro 1837034
//Course: COMSC-110-8076
//Compiler: Xcode
//Editor: TextEdit

//libraries
#include <iostream>
using namespace std;

#include <cstdlib>
#include <ctime>

#ifdef _WIN32
#include <windows.h>
#else
#include <unistd.h>
#endif

//Programmer defined data types
//NONE

//Special compiler dependent definitions
//NONE

//global constants/variables
//NONE

//Programmer defined functions
void introduction(string obj);//user introduction
int random_value();//random number for value
int random_kind();//random number for kinds
void output_value(int value);
void output_kind(int kind);


//main program
int main()
{
  //Data
  //For CardValues: 11 as Jack, 12 as Queen, 13 as King, and 14 as Ace
  //For CardKinds: 0 as Spades, 1 as Diamonds, 2 as Hearts, and 3 as Clubs
  string objective = "Display an interactive cards game human vs. computer.\n";
  int computerValue; //(integer) computer's card value,number between 2-14
  int computerKind; //(integer) computer's card kind, number between 0-3
  int humanValue; //(integer) computer's card value,a number between 2-14
  int humanKind; //(integer) computer's card kind, number between 0-3
  char playAgain; //(integer) 'Y' for yes or 'N' for no.
  int sentinel; // sentinel variable used for input validation of PlayAgain

  //User introduction
  introduction(objective);

  //Generation of a random numbers 
  do
  {
    computerValue = random_value();
    computerKind = random_kind();
    humanValue = random_value();
    humanKind = random_kind();
  
    //output cards value and kind
    cout << "Human's card is a ";
    output_value(humanValue);
    cout << " of";
    output_kind(humanKind);
    cout << endl;
    cout << "Computer's card is a ";
    output_value(computerValue);
    cout << " of";
    output_kind(computerKind);
    cout << endl;

    //output winner decision
    if (computerValue > humanValue) cout << "Computer wins!" << endl;
    else if (computerValue < humanValue) cout << "Human wins!" << endl;
    else
    {
      cout << "It's a tie!" << endl;
      continue;
    }
    while (true) // loop for input validation of playAgain
    {
      cout << "Want to play again? [Y: Yes, N: No] :";
      cin >> playAgain;
      cin.ignore(1000,10);
      if (toupper(playAgain) == 'Y') 
      {
        sentinel = 0;
        break;
      }
      else if (toupper(playAgain) == 'N') 
      {
        sentinel = 1;
        break;
      }
      else cout << "Invalid input, please try again" << endl;
     } // loop for input validation of playAgain
    cout << endl;
    } while (sentinel == 0); // main loop do

}//main



//function: introduction
void introduction(string obj)//user introduction
{
  //Data
  //obj is the program objective
  //introduction
  cout << obj; 
  cout << "Programmer: Luis Cermeno-Farro\n"; 
  cout << "Editor(s) used: TextEdit\n"; 
  cout << "Compiler(s) used: Xcode\n"; 
  cout << "File: " << __FILE__ << endl; 
  cout << "Complied: " << __DATE__ << " at " << __TIME__ << endl << endl; 

}//function: introduction



//function: random value
int random_value()
{
  //Data
  int result = 0;
  //Generation of random number

  #ifdef _WIN32 //a pause of one second is added to give enough time for the seed to regenerate ang give another random number
  Sleep(1000);
  #else
  sleep (1);
  #endif
  
  srand(time(0)); //"seed the ramdom number generator"
  result = 2 + rand() % 13; // assignment of the ramdom number from 2 to 14 generated by the computer
  return result;
}//function: random value


//function: random kind
int random_kind()
{
  //Data
  int result = 0;
  //Generation of random number

  #ifdef _WIN32 //a pause of one second is added to give enough time for the seed to regenerate ang give another random number
  Sleep(1000);
  #else
  sleep (1);
  #endif

  srand(time(0)); //"seed the ramdom number generator"
  result = rand() % 4; // assignment of the ramdom number from 0 to 3 generated by the computer
  return result;
}//function: random kind




//function: output value
void output_value(int value)
{
  switch (value)
  {
    case 11:
      cout << " Jack";
      break;
    case 12:
      cout << " Queen";
      break;
    case 13:
      cout << " King";
      break;
    case 14:
      cout << " Ace";
      break;
    default:
      cout << " " << value;
  }
}//function: output value

//function: output kind
void output_kind(int kind)
{
  switch (kind)
  {
    case 0:
      cout << " Spades";
      break;
    case 1:
      cout << " Diamonds";
      break;
    case 2:
      cout << " Hearts";
      break;
    case 3:
      cout << " Clubs";
  }
}//function: output kind