@copyrighted 1999 Valerie Colber
Luis Cermeno-Farro 1837034:  
Course and section: COMSC-110-8076

1. Objective (1 sentence brief description of what this will do): 
Ask the user to guess a number between 1 and 100.
2. Requirements (any and all requirements organized by input, processing, output, data):
INPUT (any data items to be input): 
-guess

PROCESSING (list of significant parts of the objective that will become the list of code blocks in program):
1. data definitions and generation of a ramdom number between 1 and 100
2. user introduction
3. game loop where the user guesses and gets feedback.


OUTPUT (list of anything output: introduction, data items, labels, prompts) : 
-user introduction: "Objective: Ask the user to guess a number between 1 and 100."
-prompt: "I'm thinking of a number from 1 to 100. Guess what it is :"
-user feedback: "That's too high--guess again:", or "That's too low--guess again:", or "That's right--it's" and number; or in case of invalid input "Invalid input--guess again:"


DATA (list of all data items: definition, data type, formatting, or any other specifications):
-number (integer): a ramdom number from 1 to 100 generated by the computer 
-guess (integer): number guessed by the user.

3. Algorithm instructions (recipe)
***Data and generation of a ramdom number between 1 and 100
10 initialize ramdom number generator and set target to random number between 1 and 100
***Introduction 
20 output introduction: "Objective: Ask the user to guess a number between 1 and 10. Author: Luis Cermeno"
***Game loop where the user guesses and gets feedback.
30 output prompt "I'm thinking of a number from 1 to 100. Guess what it is:"
40 input userGuess
50 if userGuess < 1 or userGuess > 100 then output "Invalid input--guess again:" and skip to line 40
60 if userGuess > target then output "That's too high--guess again:" and skip to line 40
70 if userGuess < target then output "That's too low--guess again:" and skip to line 40
80 if userGuess is equal to target then output "That's right--it's" and number.
999 END

4. Test cases (list purpose of each test case, any input values, and expected results)

Test case #1
-purpose: test two cases of failing the guess: one too high and one too low, one of invalid input and one of correct guess
-input: user guess = 10, 60, 120, 50.
-expected reults: "That's too low--guess again:", "That's too high--guess again:", "Invalid input--guess again:", "That's right--it's 50"
-execution:
10 target = 50
20 Objective: Ask the user to guess a number between 1 and 10. Author: Luis Cermeno
30 I'm thinking of a number from 1 to 100. Guess what it is [1-100 or 0 to Exit]:
40 10
50 False
60 False
70 False
80 That's too low--guess again:
40 userGuess = 60
50 False
60 That's too high--guess again:
40 userGuess = 120
50 Invalid input--guess again:"
40 userGuess = 50
50 False
60 False
70 False
80 That's right--it's 50
999 END
comments: Successful execution.
There is no way the user can exit the program other than guessing, there is no sentinel value because the guideline didn't require it.


