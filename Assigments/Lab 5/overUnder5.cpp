//Objective:  template for C++ programs and to test code
//Name: Luis Cermeno-Farro 1837034
//Course: COMSC-110-8076
//Compiler: Xcode
//Editor: TextEdit

//libraries
#include <iostream>
#include <deque>
using namespace std;

#include <cstdlib>
#include <ctime>

//Programmer defined data types
struct list
{
  int number; // (integer) is the number of a guess 
}; // list

//Special compiler dependent definitions
//NONE

//global constants/variables
//NONE

//Programmer defined functions
void introduction(string obj);//user introduction
bool checkRepeated(deque<list>& list, int input);//check for repeated value function
bool feedback(int input,int correct);//determines the kind of feedback to output

//main program
int main()
{
  //Data and generation of a ramdom number between 1 and 100
  string objective = "Objective: Interactive game in which the user has to guess a number between 1 and 100.\n";
  int target = 1 + rand() % 100; // (integer) a ramdom number from 1 to 100 generated by the computer 
  int i;// (integer) counter used to traverse the list "guess"
  bool guessed = false; //(boolean) is true if user has guessed correctly
  deque<list> guess; // collection of guesses
  list userGuess; //(object of data type list) a temporary object to store user input guess
  srand(time(0)); //"seed the ramdom number generator"


  //User introduction
  introduction(objective);

  //Input each user guess and check for sentinel value or valid input or correct guess
  cout << "I'm thinking of a number from 1 to 100. Guess what it is [1-100 or 0 to Exit]:";
  while (!guessed)
  {
    cin >> userGuess.number;
    cin.ignore(1000,10);
    if (userGuess.number == 0 ) break; // check for sentinel value
    else if (userGuess.number < 1 || userGuess.number > 100) cout << "Invalid input--guess again:"; // check for valid input
    else 
    {
      //Check for repeated input
      if (checkRepeated(guess,userGuess.number)) cout << "You already guessed " << userGuess.number << "--guess again:";
      
      //Determine and output appropiate user guess feedback
      else 
      {
        guessed = feedback(userGuess.number, target); 
        guess.push_back(userGuess); 
      }
    }
  }//input while loop
}//main


//introduction function
void introduction(string obj)//user introduction
{
  //data
  //obj is the program objective

  //introduction
  cout << endl;
  cout << obj; 
  cout << "Programmer: Luis Cermeno-Farro\n"; 
  cout << "Editor(s) used: TextEdit\n"; 
  cout << "Compiler(s) used: Xcode\n"; 
  cout << "File: " << __FILE__ << endl; 
  cout << "Complied: " << __DATE__ << " at " << __TIME__ << endl << endl; 

}//introduction function


//function checkRepeated: check for repeated value function
bool checkRepeated(deque<list>& guess, int input)
{
  //Data
  bool repeated = false;

  //Traverse collection to check for repeated values
  for (int i = 0; i < guess.size(); i++)
  {
    if (input == guess[i].number) repeated = true;
  }
  return repeated;
}//function checkRepeated


//function feedback: determines the kind of feedback to output
bool feedback(int input,int correct) //evaluates and gives feedback
{
  //Data
  bool guessed = false;

  //Determines the input user will get
  if (input > correct) cout << "That's too high--guess again:";
  else if (input < correct) cout << "That's too low--guess again:";
  else if(input == correct)
  {
    cout << "That's right--it's " << correct << endl;
    guessed = true;
  }
  return guessed;
}//function feedback