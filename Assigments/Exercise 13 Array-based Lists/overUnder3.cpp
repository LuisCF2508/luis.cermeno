//Objective:  template for C++ programs and to test code
//Name: Luis Cermeno-Farro 1837034
//Course: COMSC-110-8076
//Compiler: Xcode
//Editor: TextEdit

//libraries
#include <iostream>
using namespace std;

#include <cstdlib>
#include <ctime>

//Programmer defined data types
//NONE

//Special compiler dependent definitions
//NONE

//global constants/variables
//NONE

//Programmer defined functions
void introduction(string obj);//user introduction
bool checkRepeated(int* list, int listSize, int input);//check for repeated value function
bool feedback(int input,int correct);//feedback evaluator function

//main program
int main()
{
  //Data and generation of a ramdom number between 1 and 100
  string objective = "Objective: Interactive game in which the user has to guess a number between 1 and 100.\n";
  srand(time(0)); //"seed the ramdom number generator"
  int target = 1 + rand() % 100; // (integer) a ramdom number from 1 to 100 generated by the computer 
  int userGuess; //(integer) number guessed each time by the user.
  int i;// (integer) counter used to traverse the list "guess"
  bool repeated; //(boolean) is true if a repeated input is found
  bool guessed = false; //(boolean) is true if user has guessed correctly

  //User introduction
  introduction(objective);

  //Input each user guess and check for sentinel value or valid input
  const int MAX_GUESSES = 100; //list capacity
  int nGuesses = 0;// initially empty list
  int guess[MAX_GUESSES];// array-based list with a capacity of 100 integers
  cout << "I'm thinking of a number from 1 to 100. Guess what it is [1-100 or 0 to Exit]:";
  while (!guessed) //main loop
  {
    cin >> userGuess;
    cin.ignore(1000,10);
    if (userGuess == 0 ) break; // check for sentinel value
    else if (userGuess < 1 || userGuess > 100) // check for valid input
    {
      cout << "Invalid input--guess again:";
      continue;
    }//check for valid input
    repeated = checkRepeated(guess,nGuesses,userGuess); // check for repeated input
    if (repeated) 
    {
      cout << "You already guessed " << userGuess << "--guess again:";
      continue;
    }

    //Determine and output appropiate user guess feedback
    if (nGuesses < MAX_GUESSES) guess[nGuesses++] = userGuess; //store input value on the list
    guessed = feedback(userGuess, target);
  }//main loop

}//main


//introduction function
void introduction(string obj)//user introduction
{
  //data
  //obj is the program objective

  //introduction
  cout << endl;
  cout << obj; 
  cout << "Programmer: Luis Cermeno-Farro\n"; 
  cout << "Editor(s) used: TextEdit\n"; 
  cout << "Compiler(s) used: Xcode\n"; 
  cout << "File: " << __FILE__ << endl; 
  cout << "Complied: " << __DATE__ << " at " << __TIME__ << endl << endl; 

}//introduction function


//check for repeated value function
bool checkRepeated(int* list, int listSize, int input)
{
bool repeated = false;
  for (int i = 0; i < listSize; i++) // traverse the list to check for repeated values
  {
    if (input == list[i]) repeated = true;
  }// traverse the list to check for repeated values
return repeated;
}//check for repeated value function


//feedback evaluator function
bool feedback(int input,int correct) //evaluates and gives feedback
{
  bool guessed = false;
  if (input > correct) cout << "That's too high--guess again:";
  else if (input < correct) cout << "That's too low--guess again:";
  else if(input == correct)
  {
    cout << "That's right--it's " << correct << endl;
    guessed = true;
  }
  return guessed;
}//feedback evaluator function